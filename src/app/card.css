 :root {
    --primary-color: #212121;
    --background-color: #111;
    --font: sans-serif;
  }
  
  /*  */
  * {
    margin: 0;
    padding: 0;
  }

  
  /* Timeline Container */
  .timeline {
    background: #15172b;
    margin: 20px auto;
    padding: 20px;
  }
  
  .timeline-bck{
    background: var(--background-color);
    font-family: var(--font);
    display: flex;
    justify-content: center;
  }
  /* Card container */
  .card {
    position: relative;
     /* Set the desired width for your card */
    padding: 2px; 
  }
  
  /* setting padding based on even or odd */
  .card:nth-child(odd) {
    padding: 30px 0 30px 30px;
  }
  .card:nth-child(even) {
    padding: 30px 30px 30px 0;
  }
  /* Global ::before */
  .card::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid rgba(8, 223, 252, 0.719);
  }
  
  /* Setting the border of top, bottom, left */
  .card:nth-child(odd)::before {
    left: 0px;
    top: -4.5px;
    bottom: -4.5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
  }
  
  /* Setting the border of top, bottom, right */
  .card:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
  }
  
  /* Removing the border if it is the first card */
  .card:first-child::before {
    border-top: 0;
    border-top-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's odd */
  .card:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's even */
  .card:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
  }
  
  /* Information about the timeline */
  .info {
    display: flex;
    flex-direction: column;
    background: #1d1f97;
    color: gray;
    border-radius: 10px;
    padding: 10px;
  }
  
  /* Title of the card */
  .title {
    color: rgb(0, 0, 0);
    position: relative;
    
  }

  .map-written{
    color:aqua;
    position: relative;
    margin-top: 10px;
  }

  .mark-right {
    background-color:#1d1f97;
    color: aqua;
    border-radius: 70%;
    width:15%;
    margin-right: 10px;
    float: right;
  }

  .mark-wrong{
    
    background-color: #1d1f97;
    color: aqua;
    border-radius: 50%;
    width:15%;
    height: 10%;
    margin-right: 10px;
    float: right;
    
  }

  .button-container {
    display: flex;
    justify-content: flex-end;
    margin-left: 10px;
  }

  .circular-button {
    position: relative;
    top: 1px; /* Adjust the top position as needed */
    right: 2px; /* Adjust the right position as needed */
    background-color: #007bff; /* Set the background color */
    color: #fff; /* Set the text color */
    border: none;
    bottom: 2px;
    border-radius: 50%; /* Make the button circular */
    width: 30px; /* Set the desired button size */
    height: 30px; /* Set the desired button size */
    font-size: 20px; /* Set the font size as needed */
    cursor: pointer;
  }

  .badge-container {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
  }
  
  .badge {
    background-color: #007bff;
    color: #fff;
    margin-top: 15px;
    padding: 5px 10px;
    margin-bottom: 8px;
    margin-right: 10px;
    border-radius: 6px;
  }

  /* Timeline dot  */
  .title::before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 999px;
    border: 3px solid rgba(8, 223, 252, 0.719);
  }
  
  /* text right if the card is even  */
  .card:nth-child(even) > .info > .title {
    text-align: right;
  }
  
  /* setting dot to the left if the card is odd */
  .card:nth-child(odd) > .info > .title::before {
    left: -45px;
  }
  
  /* setting dot to the right if the card is odd */
  .card:nth-child(even) > .info > .title::before {
    right: -45px;
  }